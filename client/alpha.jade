template(name='alpha')
    .ui.stackable.grid
        .row
            .sixteen.wide.column
                unless is_loading
                    // .ui.divider
                    // // each sessions
                    // //     .ui.icon.large.button.select_session(class=session_selector_class title='select session')
                    // //         i.play.icon
                // |did: #{session_alpha_id}
                        
                each current_alpha.facets
                    +alpha_facet
                if current_alpha
                    .ui.icon.circular.button.print_alpha(title='Print Session Doc')
                        i.code.icon
                    .ui.reset.icon.circular.button(title='Reload Session')
                        i.refresh.icon
                    .ui.delete_alpha.icon.circular.button(title='Delete Session')
                        i.trash.icon
                else
                    .create_alpha.ui.circular.button.pointer(title='new session')
                        i.plus.icon
                        |alpha session
        .row
            .sixteen.wide.column
                each current_alpha.result_ids
                    +alpha_result
            
            
            

template(name='alpha_facet')
    if filtering_res
        .ui.grey.inline.header 
            if icon
                i.icon(class=icon)
                //- +i name=icon            
            if title
                |#{title}
            else 
                |#{key}
    if is_admin
        .ui.icon.small.transparent.input
            i.search.icon
            input.add_filter(type='text')
    div
    each filtering_res
        if name
            .selector.ui.large.circular.button.toggle_selection(class=toggle_value_class title=count)
                strong #{name}
                if is_admin
                    small #{cal_count} #{count}
        else
            .selector.ui.circular.button.toggle_selection(class=toggle_value_class title=count)
                strong [null]
                //- small #{cal_count}
            
            
            
            
template(name='alpha_result')
    with result 
        unless is_loading
            .ui.result.basic.segment.stackable
                each _keys
                    .ui.large.label #{this}
                    +key_view
                    //- +Template.dynamic template=view_template 
                //- if watson
                //-     +watson_view
                //- if visual_classes
                //-     +visual_classes
                //-     if analyzed_text
                //-         |#{nl2br analyzed_text}
                a.ui.header(href="/view#{_id}")
                    each bricks
                        if header
                            +Template.dynamic template=view_template 
                    // |#{title}
                //- .description
                //-     each small_bricks
                //-         unless header
                //-             +Template.dynamic template=view_template 
                //- .description
                //-     each big_bricks
                //-         unless header
                //-             +Template.dynamic template=view_template 
                .extra
                    // +user_list_toggle key='bookmark_ids' icon='bookmark' label='Bookmark' color='red'
                    //- if is_dev
                    //-     +remove_button
                    if can_edit
                        a.ui.icon.big.button(href="/edit/#{_id}")
                            i.pencil.icon
                    a.ui.icon.big.button(href="/view/#{_id}")
                        i.eye.icon
                    //- each schema.actions
                    //-     +Template.dynamic template=this data=..
                    +author_info
                    +creation_info
                    //- +clone_button
                    +detect



template(name='key_view')
    //- div
    //- .ui.inline.grey.header(title='name') #{key}
    div
    with context
        +Template.dynamic template=field_view
